/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vue;

import Modele.Adresse;
import Modele.Client;
import javax.swing.JOptionPane;
import java.sql.SQLException;

/**
 *
 * @author PC
 */
public class FenetreAjoutClient extends javax.swing.JDialog {
    private GestionClients parent; //
    // idClient = null => mode ajout, sinon mode modification
    private Integer idClient = null; 
    private Integer idAdresse = null; // On stockera l'ID de l'adresse associée
    
    /**
     * Constructeur pour "AJOUT" (aucun ID client).
     */
    public FenetreAjoutClient(GestionClients parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        this.setTitle("Ajouter un Client");
    }

    /**
     * Constructeur pour "MODIFICATION".
     * On reçoit un `Client c` et son `Adresse adr` existants,
     * afin de pré-remplir le formulaire.
     */
    public FenetreAjoutClient(GestionClients parent, boolean modal, Client c, Adresse adr) {
        super(parent, modal);
        this.parent = parent;

        this.idClient = c.getIdClient();    // ID client existant => mode "modif"
        this.idAdresse = c.getIdAdresse(); // On retient l'id_adresse

        initComponents();
        this.setTitle("Modifier un Client");

        // Pré-remplir les champs "Client"
        jTextF_Nom.setText(c.getNom());
        jTextF_Prenom.setText(c.getPrenom());
        jTextF_Email.setText(c.getEmail());
        jCheckBox_carte.setSelected(c.isCarteFidelite());

        // Pré-remplir les champs "Adresse"
        if (adr != null) {
            jTextF_Numrue.setText(String.valueOf(adr.getNumRue()));
            jTextF_Nomrue.setText(adr.getNomRue());
            jTextF_Localite.setText(adr.getLocalite());
            jTextF_Pays.setText(adr.getPays());
            jTextF_Codepostal.setText(adr.getCodePostal());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLab_titre = new javax.swing.JLabel();
        jLab_Nom = new javax.swing.JLabel();
        jLab_Prenom = new javax.swing.JLabel();
        jLab_Email = new javax.swing.JLabel();
        jLab_Numrue = new javax.swing.JLabel();
        jLab_Nomrue = new javax.swing.JLabel();
        jLab_Localite = new javax.swing.JLabel();
        jLab_pays = new javax.swing.JLabel();
        jLab_CodePostal = new javax.swing.JLabel();
        jLab_Cartefidelite = new javax.swing.JLabel();
        jTextF_Nom = new javax.swing.JTextField();
        jTextF_Email = new javax.swing.JTextField();
        jTextF_Numrue = new javax.swing.JTextField();
        jTextF_Localite = new javax.swing.JTextField();
        jTextF_Codepostal = new javax.swing.JTextField();
        jTextF_Prenom = new javax.swing.JTextField();
        jTextF_Nomrue = new javax.swing.JTextField();
        jTextF_Pays = new javax.swing.JTextField();
        jCheckBox_carte = new javax.swing.JCheckBox();
        jBtn_Valider = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jBtn_Annuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_titre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLab_titre.setText("FenetreAjoutClient");
        getContentPane().add(jLab_titre, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        jLab_Nom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Nom.setText("Nom");
        getContentPane().add(jLab_Nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jLab_Prenom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Prenom.setText("Prenom");
        getContentPane().add(jLab_Prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        jLab_Email.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Email.setText("Email");
        getContentPane().add(jLab_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLab_Numrue.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Numrue.setText("Num_rue");
        getContentPane().add(jLab_Numrue, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jLab_Nomrue.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Nomrue.setText("Nom_rue");
        getContentPane().add(jLab_Nomrue, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, -1, -1));

        jLab_Localite.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Localite.setText("Localité");
        getContentPane().add(jLab_Localite, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLab_pays.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_pays.setText("Pays");
        getContentPane().add(jLab_pays, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, -1, -1));

        jLab_CodePostal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_CodePostal.setText("Code_postal");
        getContentPane().add(jLab_CodePostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 80, -1));

        jLab_Cartefidelite.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLab_Cartefidelite.setText("Carte_fidelite");
        getContentPane().add(jLab_Cartefidelite, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, -1, -1));
        getContentPane().add(jTextF_Nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 240, -1));
        getContentPane().add(jTextF_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 240, -1));
        getContentPane().add(jTextF_Numrue, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 240, -1));

        jTextF_Localite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextF_LocaliteActionPerformed(evt);
            }
        });
        getContentPane().add(jTextF_Localite, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, 240, -1));

        jTextF_Codepostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextF_CodepostalActionPerformed(evt);
            }
        });
        getContentPane().add(jTextF_Codepostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 240, -1));
        getContentPane().add(jTextF_Prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 200, -1));
        getContentPane().add(jTextF_Nomrue, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, 200, -1));
        getContentPane().add(jTextF_Pays, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 200, -1));

        jCheckBox_carte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_carteActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox_carte, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 270, -1, -1));

        jBtn_Valider.setBackground(new java.awt.Color(204, 255, 204));
        jBtn_Valider.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn_Valider.setText("Valider");
        jBtn_Valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ValiderActionPerformed(evt);
            }
        });
        getContentPane().add(jBtn_Valider, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, -1, -1));

        jPanel1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtn_Annuler.setBackground(new java.awt.Color(204, 255, 204));
        jBtn_Annuler.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn_Annuler.setText("Annuler");
        jBtn_Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_AnnulerActionPerformed(evt);
            }
        });
        jPanel1.add(jBtn_Annuler, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextF_CodepostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextF_CodepostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextF_CodepostalActionPerformed

    private void jTextF_LocaliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextF_LocaliteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextF_LocaliteActionPerformed

    private void jBtn_ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ValiderActionPerformed
        try {
            // Récupérer les champs "client"
            String nom = jTextF_Nom.getText().trim();
            String prenom = jTextF_Prenom.getText().trim();
            String email = jTextF_Email.getText().trim();
            boolean carteFidelite = jCheckBox_carte.isSelected();

            // Récupérer les champs "adresse"
            int numRue = Integer.parseInt(jTextF_Numrue.getText().trim());
            String nomRue = jTextF_Nomrue.getText().trim();
            String localite = jTextF_Localite.getText().trim();
            String pays = jTextF_Pays.getText().trim();
            String codePostal = jTextF_Codepostal.getText().trim();

            // Vérif basique
            if (nom.isEmpty() || prenom.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nom et Prénom obligatoires");
                return;
            }

            // Vérif codePostal en chiffres ? => up to you
            // Vérif si idClient == null => c'est un ajout
            if (idClient == null) {
                // -- MODE AJOUT --

                // 1) Créer l'Adresse + insérer en base
                Adresse adr = new Adresse(numRue, nomRue, localite, pays, codePostal);
                Adresse.createAdresse(adr); 
                // => adr.getIdAdresse() mis à jour

                // 2) Créer le Client
                Client c = new Client();
                c.setNom(nom);
                c.setPrenom(prenom);
                c.setEmail(email);
                c.setCarteFidelite(carteFidelite);
                c.setIdAdresse(adr.getIdAdresse()); 

                // 3) Insertion Client
                boolean ok = Client.createClient(c);
                if (ok) {
                    JOptionPane.showMessageDialog(this, "Client ajouté avec succès !");
                    if (parent != null) {
                        parent.chargerClients();
                    }
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Erreur lors de l'ajout");
                }

            } else {
                // -- MODE MODIFICATION --
                // 1) Récupérer le client en base
                Client c = Client.getClientById(idClient);
                if (c == null) {
                    JOptionPane.showMessageDialog(this, "Client introuvable en base");
                    return;
                }

                // 2) Récupérer l'adresse
                Adresse adr = Adresse.getAdresseById(c.getIdAdresse());
                if (adr == null) {
                    // Si pas d'adresse => en créer une
                    adr = new Adresse(numRue, nomRue, localite, pays, codePostal);
                    Adresse.createAdresse(adr);
                    c.setIdAdresse(adr.getIdAdresse());
                } else {
                    // Mettre à jour l'adresse existante
                    adr.setNumRue(numRue);
                    adr.setNomRue(nomRue);
                    adr.setLocalite(localite);
                    adr.setPays(pays);
                    adr.setCodePostal(codePostal);
                    Adresse.updateAdresse(adr);
                }

                // 3) Mettre à jour le client
                c.setNom(nom);
                c.setPrenom(prenom);
                c.setEmail(email);
                c.setCarteFidelite(carteFidelite);
                // Si vous voulez changer totalement d'adresse, vous faites c.setIdAdresse(...) ?

                // 4) Update du Client
                boolean ok = Client.updateClient(c);
                if (ok) {
                    JOptionPane.showMessageDialog(this, "Client modifié avec succès !");
                    if (parent != null) {
                        parent.chargerClients();
                    }
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Erreur lors de la modification");
                }
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Numéro de rue invalide");
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur SQL: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur driver DB: " + ex.getMessage());
        }
    }//GEN-LAST:event_jBtn_ValiderActionPerformed

    private void jBtn_AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_AnnulerActionPerformed
        dispose(); // Ferme la fenêtre
    }//GEN-LAST:event_jBtn_AnnulerActionPerformed

    private void jCheckBox_carteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_carteActionPerformed
        boolean carteFidelite = jCheckBox_carte.isSelected(); // TRUE si coché, FALSE sinon
    }//GEN-LAST:event_jCheckBox_carteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreAjoutClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreAjoutClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreAjoutClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreAjoutClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FenetreAjoutClient dialog = new FenetreAjoutClient((GestionClients) new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Annuler;
    private javax.swing.JButton jBtn_Valider;
    private javax.swing.JCheckBox jCheckBox_carte;
    private javax.swing.JLabel jLab_Cartefidelite;
    private javax.swing.JLabel jLab_CodePostal;
    private javax.swing.JLabel jLab_Email;
    private javax.swing.JLabel jLab_Localite;
    private javax.swing.JLabel jLab_Nom;
    private javax.swing.JLabel jLab_Nomrue;
    private javax.swing.JLabel jLab_Numrue;
    private javax.swing.JLabel jLab_Prenom;
    private javax.swing.JLabel jLab_pays;
    private javax.swing.JLabel jLab_titre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextF_Codepostal;
    private javax.swing.JTextField jTextF_Email;
    private javax.swing.JTextField jTextF_Localite;
    private javax.swing.JTextField jTextF_Nom;
    private javax.swing.JTextField jTextF_Nomrue;
    private javax.swing.JTextField jTextF_Numrue;
    private javax.swing.JTextField jTextF_Pays;
    private javax.swing.JTextField jTextF_Prenom;
    // End of variables declaration//GEN-END:variables
}
