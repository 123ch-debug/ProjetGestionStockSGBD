/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue;

import Modele.Adresse;
import Modele.Employe;
import Modele.Users;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class GestionUtilisateurs extends javax.swing.JFrame {

    /**
     * Creates new form FenetreAdmin
     */
    public GestionUtilisateurs() {
        initComponents();
    }
    
    /**
     * Charge les utilisateurs dans la JTable jTable_Users
     */
    public void loadUsers() {
        DefaultTableModel model = (DefaultTableModel) jTable_Users.getModel();
        model.setRowCount(0);

        // Récupère tous les utilisateurs
        List<Users> listeUsers = Users.getAllUsers();
        for (Users u : listeUsers) {
            // On masque le password en affichant "********"
            model.addRow(new Object[]{
                u.getIdUser(),
                u.getUsername(),
                "********",// Cache le mot de passe
                u.getStatut(), // Nouvelle colonne statut
                getRoleName(u.getIdPrivilege())
            });
        }
    }

    /**
     * Convertit l'id_privilege en texte
     */
    private String getRoleName(int idPrivilege) {
        switch (idPrivilege) {
            case 1: return "Admin";
            case 2: return "Gerant";
            case 3: return "Utilisateur";
            //case 4: return "Visiteur";
            default: return "Inconnu";
        }
    }

    /**
     * Charge la liste des employés dans la JTable jTableEmployes
     */
    public void loadEmployes() {
        DefaultTableModel model = (DefaultTableModel) jTableEmployes.getModel();
        model.setRowCount(0);

        try {
            // Récupère tous les employés
            List<Employe> employes = Employe.getAllEmployes();
            for (Employe emp : employes) {
                // Ici, on n’affiche plus numRue/nomRue
                // On peut à la place afficher idAdresse
                model.addRow(new Object[]{
                    emp.getIdEmploye(),
                    emp.getNom(),
                    emp.getPrenom(),
                    emp.getTitre(),
                    emp.getSalaire(),
                    emp.getPctCommission(),
                    emp.getIdAdresse(), // Au lieu de numRue/nomRue
                    emp.getIdUser()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                this, 
                "❌ Erreur lors du chargement des employés:\n" + e.getMessage(),
                "Erreur",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1_Titre = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jBtn_Fermer = new javax.swing.JButton();
        jBtn_ajouter = new javax.swing.JButton();
        jBtn_modifier = new javax.swing.JButton();
        jBtn_ActiverDesactiver = new javax.swing.JButton();
        jLab_utili = new javax.swing.JLabel();
        jScrollPane_Users = new javax.swing.JScrollPane();
        jTable_Users = new javax.swing.JTable();
        jScrollPane_Employes = new javax.swing.JScrollPane();
        jTableEmployes = new javax.swing.JTable();
        jBtn_RechercherEmpl = new javax.swing.JButton();
        jTextF_Rechercher = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1_Titre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField1_Titre.setText("Gestion des utilisateurs");
        jTextField1_Titre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1_TitreActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1_Titre, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, -1, -1));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtn_Fermer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jBtn_Fermer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/connection/fermer.JPG"))); // NOI18N
        jBtn_Fermer.setText("Fermer");
        jBtn_Fermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_FermerActionPerformed(evt);
            }
        });
        jPanel1.add(jBtn_Fermer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        jBtn_ajouter.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jBtn_ajouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/connection/ajouter.JPG"))); // NOI18N
        jBtn_ajouter.setText("Ajouter");
        jBtn_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ajouterActionPerformed(evt);
            }
        });
        jPanel1.add(jBtn_ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 160, -1));

        jBtn_modifier.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jBtn_modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/connection/modif.JPG"))); // NOI18N
        jBtn_modifier.setText("Modifier");
        jBtn_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_modifierActionPerformed(evt);
            }
        });
        jPanel1.add(jBtn_modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 160, -1));

        jBtn_ActiverDesactiver.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jBtn_ActiverDesactiver.setText("Activer/Desactiver");
        jBtn_ActiverDesactiver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ActiverDesactiverActionPerformed(evt);
            }
        });
        jPanel1.add(jBtn_ActiverDesactiver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 160, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 530));

        jLab_utili.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/connection/utilisate.JPG"))); // NOI18N
        getContentPane().add(jLab_utili, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        jTable_Users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom d'utilisateur", "mot de passe", "Statut", "privilège"
            }
        ));
        jTable_Users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_UsersMouseClicked(evt);
            }
        });
        jTable_Users.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_UsersKeyPressed(evt);
            }
        });
        jScrollPane_Users.setViewportView(jTable_Users);

        getContentPane().add(jScrollPane_Users, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 520, 150));

        jTableEmployes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Prenom", "Titre", "Salaire", "Pct_commision", "ID_adresse", "ID_user"
            }
        ));
        jScrollPane_Employes.setViewportView(jTableEmployes);

        getContentPane().add(jScrollPane_Employes, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 680, 150));

        jBtn_RechercherEmpl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn_RechercherEmpl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/connection/imgRech.JPG"))); // NOI18N
        jBtn_RechercherEmpl.setText("Rechercher Employe");
        jBtn_RechercherEmpl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_RechercherEmplActionPerformed(evt);
            }
        });
        getContentPane().add(jBtn_RechercherEmpl, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, -1, -1));

        jTextF_Rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextF_RechercherActionPerformed(evt);
            }
        });
        getContentPane().add(jTextF_Rechercher, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 210, -1));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 760, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1_TitreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1_TitreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1_TitreActionPerformed

    private void jBtn_FermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_FermerActionPerformed
         int confirm = JOptionPane.showConfirmDialog(this, 
        "Voulez-vous vraiment fermer la gestion des utilisateurs ?", 
        "Confirmation", 
        JOptionPane.YES_NO_OPTION);
    
        if (confirm == JOptionPane.YES_OPTION) {
            this.dispose(); // Ferme la fenêtre si l'utilisateur confirme
        }
    
    }//GEN-LAST:event_jBtn_FermerActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadUsers(); // Charge les utilisateurs dès l’ouverture de la fenêtre
        loadEmployes(); // Charge les employés
    }//GEN-LAST:event_formWindowOpened

    private void jBtn_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ajouterActionPerformed
        FenetreAjoutUtilisateur dialog = new FenetreAjoutUtilisateur(this, true);
        dialog.setVisible(true);
    
        // 🔄 Recharger les tables après ajout
        loadUsers();
        loadEmployes();
    }//GEN-LAST:event_jBtn_ajouterActionPerformed

    private void jBtn_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_modifierActionPerformed
        int selectedRow = jTableEmployes.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(
                this, 
                "❗ Veuillez sélectionner un employé à modifier.",
                "Alerte",
                JOptionPane.WARNING_MESSAGE
            );
            return;
        }

        // Récupérer l'ID employé depuis la JTable
        int idEmploye = (int) jTableEmployes.getValueAt(selectedRow, 0);

        try {
            // Charger l'employé en base
            Employe emp = Employe.getEmployeById(idEmploye);
            if (emp == null) {
                JOptionPane.showMessageDialog(
                    this,
                    "❌ Employé introuvable en base.",
                    "Erreur",
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            // Récupérer l'adresse (si vous voulez la passer à FenetreAjoutUtilisateur)
            Adresse adr = Adresse.getAdresseById(emp.getIdAdresse());

            // Récupérer l'utilisateur
            Users utilisateur = Users.getUserById(emp.getIdUser());

            // Ouvrir la fenêtre de modification
            FenetreAjoutUtilisateur dialog = new FenetreAjoutUtilisateur(this, true, emp, adr, utilisateur);
            dialog.setVisible(true);

            // Rafraîchir
            loadUsers();
            loadEmployes();

        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(
                this, 
                "❌ Erreur lors de la modification: " + ex.getMessage(),
                "Erreur",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_jBtn_modifierActionPerformed

    private void jBtn_ActiverDesactiverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ActiverDesactiverActionPerformed
        int selectedRow = jTable_Users.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(
                this, "Veuillez sélectionner un utilisateur.", "Erreur", JOptionPane.ERROR_MESSAGE
            );
            return;
        }

        int idUser = (int) jTable_Users.getValueAt(selectedRow, 0);
        String statutActuel = (String) jTable_Users.getValueAt(selectedRow, 3); // La colonne statut
        boolean isActive = statutActuel.equals("actif");

        int confirm = JOptionPane.showConfirmDialog(
            this,
            isActive ? "Voulez-vous désactiver cet utilisateur ?" : "Voulez-vous activer cet utilisateur ?",
            "Confirmation",
            JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                boolean success = Users.setUserStatus(idUser, !isActive);
                if (success) {
                    JOptionPane.showMessageDialog(
                        this, "Statut de l'utilisateur mis à jour !"
                    );
                    loadUsers(); // Recharge la liste après modification
                } else {
                    JOptionPane.showMessageDialog(
                        this, "❌ Erreur lors de la mise à jour.", "Erreur", JOptionPane.ERROR_MESSAGE
                    );
                }
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(
                    this, "Erreur SQL: " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_jBtn_ActiverDesactiverActionPerformed

    private void jTable_UsersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_UsersKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_UsersKeyPressed

    private void jTable_UsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_UsersMouseClicked
        int selectedRow = jTable_Users.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(
                this,
                "Veuillez sélectionner un utilisateur.",
                "Erreur",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }

        // Récupération de l'ID utilisateur sélectionné
        int idUser = (int) jTable_Users.getValueAt(selectedRow, 0);

        try {
            // Récupérer l'employé correspondant à cet utilisateur
            Employe employe = Employe.getEmployeByUserId(idUser);

            if (employe == null) {
                JOptionPane.showMessageDialog(this, "Aucun employé associé à cet utilisateur.");
                return;
            }

            // Récupérer l'adresse de l'employé
            Adresse adresse = Adresse.getAdresseById(employe.getIdAdresse());

            // Construire le message d'affichage
           String info =
                     "👤 **Nom** : " + employe.getNom() + "\n"
                    + "👤 **Prénom** : " + employe.getPrenom() + "\n"
                    + "🎖 **Titre** : " + employe.getTitre() + "\n"
                    + "💰 **Salaire** : " + employe.getSalaire() + " €\n"
                    + "📊 **Commission (%)** : " + employe.getPctCommission() + "%\n"
                    + "\n📍 **Adresse**\n"
                    + "🏠 **Numéro de rue** : " + adresse.getNumRue() + "\n"
                    + "🏠 **Nom de rue** : " + adresse.getNomRue() + "\n"
                    + "🌍 **Localité** : " + adresse.getLocalite() + "\n"
                    + "🇫🇷 **Pays** : " + adresse.getPays() + "\n"
                    + "📮 **Code Postal** : " + adresse.getCodePostal();
           
            // Afficher dans une boîte de dialogue
            JOptionPane.showMessageDialog(this, info, "Information Employé", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des informations.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTable_UsersMouseClicked

    private void jBtn_RechercherEmplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_RechercherEmplActionPerformed
        String recherche = jTextF_Rechercher.getText().trim();

    if (recherche.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Veuillez entrer un nom ou un ID pour rechercher.", "Erreur", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        List<Employe> resultats = Employe.rechercherEmployeParNomOuId(recherche);

        if (resultats.isEmpty()) {
            JOptionPane.showMessageDialog(this, "❌ Aucun employé trouvé.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Si plusieurs résultats, proposer une sélection avec JComboBox
        Employe employeSelectionne;
        if (resultats.size() > 1) {
            Employe[] employesArray = resultats.toArray(new Employe[0]);
            Employe choix = (Employe) JOptionPane.showInputDialog(
                this,
                "Plusieurs employés trouvés. Sélectionnez celui que vous cherchez :",
                "Sélection d'un employé",
                JOptionPane.QUESTION_MESSAGE,
                null,
                employesArray,
                employesArray[0]
            );

            if (choix == null) {
                return; // L'utilisateur a annulé
            }
            employeSelectionne = choix;
        } else {
            employeSelectionne = resultats.get(0); // Un seul résultat, on l'affiche directement
        }

        // Récupérer l'adresse de l'employé sélectionné
        Adresse adr = Adresse.getAdresseById(employeSelectionne.getIdAdresse());

        // Construire le message d'affichage
        String message = "📌 **Informations de l'Employé** :\n"
                + "🆔 ID : " + employeSelectionne.getIdEmploye() + "\n"
                + "👤 Nom : " + employeSelectionne.getNom() + " " + employeSelectionne.getPrenom() + "\n"
                + "🏢 Titre : " + employeSelectionne.getTitre() + "\n"
                + "💰 Salaire : " + employeSelectionne.getSalaire() + " €\n"
                + "📌 Adresse : " + (adr != null ? adr.getNomRue() + ", " + adr.getLocalite() + ", " + adr.getPays() : "Non renseignée") + "\n"
                + "🔑 ID User : " + employeSelectionne.getIdUser() + "\n";

        JOptionPane.showMessageDialog(this, message, "Employé trouvé", JOptionPane.INFORMATION_MESSAGE);

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "❌ Erreur lors de la recherche.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jBtn_RechercherEmplActionPerformed

    private void jTextF_RechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextF_RechercherActionPerformed
       jBtn_RechercherEmplActionPerformed(evt);
    }//GEN-LAST:event_jTextF_RechercherActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionUtilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionUtilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionUtilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionUtilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionUtilisateurs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_ActiverDesactiver;
    private javax.swing.JButton jBtn_Fermer;
    private javax.swing.JButton jBtn_RechercherEmpl;
    private javax.swing.JButton jBtn_ajouter;
    private javax.swing.JButton jBtn_modifier;
    private javax.swing.JLabel jLab_utili;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane_Employes;
    private javax.swing.JScrollPane jScrollPane_Users;
    private javax.swing.JTable jTableEmployes;
    private javax.swing.JTable jTable_Users;
    private javax.swing.JTextField jTextF_Rechercher;
    private javax.swing.JTextField jTextField1_Titre;
    // End of variables declaration//GEN-END:variables
}
